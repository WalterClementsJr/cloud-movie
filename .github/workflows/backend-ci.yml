name: Backend CI Pipeline

on:
  pull_request:
    branches:
      - "master"
    paths:
      - "backend/**"
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_DEFAULT_REGION:
        required: true
    inputs:
      vars.ECR_REGISTRY:
        type: string
        required: true

defaults:
  run:
    working-directory: ./backend

jobs:
  lint:
    runs-on: "ubuntu-22.04"

    steps:
      - name: Clone the repo
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pipenv flake8
          pipenv install

      - name: Run Linting
        run: |
          pipenv run lint

  test:
    runs-on: "ubuntu-22.04"

    steps:
      - name: Clone the repo
        uses: actions/checkout@v4

      - name: Set up Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pipenv
          pipenv install

      - name: Run Tests
        run: |
          pipenv run test

  build:
    runs-on: "ubuntu-22.04"
    environment: dev
    needs: [ "lint", "test" ]

    steps:
      - name: Clone the repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Build and push docker image to Amazon ECR
        run: |
          cd ..
          export ECR_REGISTRY=${{ vars.ECR_REGISTRY }}

          export BE_IMAGE_TAG=${{ github.sha }}
          docker-compose build movie-backend
